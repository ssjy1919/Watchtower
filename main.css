/* src/setting/settingTab.css */
.file-Supervision-setting-container .link {
  margin-bottom: 3em;
}
.file-Supervision-setting-container .switch {
  position: relative;
  display: inline-block;
  width: 40px;
  height: 20px;
}
.file-Supervision-setting-container .switch input {
  opacity: 0;
  width: 0;
  height: 0;
}
.file-Supervision-setting-container .slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--background-modifier-border-hover);
  transition: 0.4s;
  border-radius: 20px;
}
.file-Supervision-setting-container .slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 2px;
  bottom: 2px;
  background-color: var(--toggle-thumb-color);
  transition: 0.4s;
  border-radius: 50%;
}
.file-Supervision-setting-container input:checked + .slider {
  background-color: hsl(var(--accent-h), var(--accent-s), var(--accent-l));
}
.file-Supervision-setting-container input:checked + .slider:before {
  transform: translateX(20px);
}
.file-Supervision-setting-container .setting-item {
  border-bottom: 1px solid var(--background-modifier-border-hover);
  margin-top: 0.5em;
  border-top: 0;
  &:hover {
    background-color: #c6c6c61b;
  }
}
.file-Supervision-setting-container .setting-item-2 {
  margin-left: 2em;
}

/* src/setting/components/Switch.css */
.setting-item .setting-item-description {
  font-size: 0.7em;
}

/* src/watchtowerPlugin/view/fileSupervisionView.css */
.file-supervision-table-show {
  width: auto;
  max-width: 100%;
  margin-left: 0.5em;
}
.file-supervision-table-none {
  display: none;
}
.recent-open-file-table {
  margin-bottom: 1em;
}
.file-supervision table {
  width: auto;
  max-width: 100%;
  border-collapse: collapse;
  table-layout: auto;
}
.file-supervision th,
.file-supervision td {
  border: 1px solid #ddd;
  padding: 3px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  min-width: 1em;
}
.file-supervision th:nth-child(1),
.file-supervision td:nth-child(1) {
  width: auto;
}
.file-supervision th:nth-child(2),
.file-supervision td:nth-child(2) {
  max-width: 8em;
  min-width: 1em;
}
.file-supervision th:nth-child(3),
.file-supervision td:nth-child(3) {
  max-width: 100%;
  min-width: 1em;
}
.file-supervision-table-show.tips,
.file-supervision-table-none.tips {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  min-height: 1.5em;
  margin-top: 0.1em;
  margin-bottom: 0.1em;
  margin-left: 0.1em;
  margin-right: 0;
  padding: 3px 0 3px 8px;
  font-size: 1em;
}
.file-supervision .save-file-info,
.file-supervision .show-table {
  font-size: 0.8em;
}
.file-supervision .save-file-info:hover,
.file-supervision .show-table:hover {
  color: var(--nav-item-color-hover);
  background-color: var(--nav-item-background-hover);
  font-weight: var(--nav-item-weight-hover);
}
.file-supervision-table-show table {
  margin: 0 0.5em 0.5em 0;
  padding: 0.5em;
  border-inline-start: var(--nav-indentation-guide-width) solid var(--nav-indentation-guide-color);
  border-inline-end: var(--nav-indentation-guide-width) solid var(--nav-indentation-guide-color);
}
.file-supervision .markTime {
  font-size: 0.8em;
}

/* src/watchtowerPlugin/recentFile/RecentOpenFileTable.css */

/* src/watchtowerPlugin/view/leafView.css */
.file-supervision-left-view {
  width: 100%;
  height: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
  overflow-y: auto;
}

/* src/pluginManagerPlugin/PluginManagerView.css */
.PluginManagerView {
  display: inline-flex;
  flex-direction: row;
  width: 100%;
  flex-wrap: nowrap;
  & .markdown-rendered {
    max-height: 3em;
    overflow: auto;
  }
  & .markdown-rendered * {
    margin: 5px 0;
  }
}
.PluginManagerView .grouping {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
}
.PluginManagerView .tag-container {
  padding: 0;
  font-weight: bold;
  padding-top: 2em;
  width: 3em;
}
.pluginManager-table {
  width: inherit;
}
.PluginManagerView .initial-tag {
  display: inline-block;
  width: 24px;
  height: 24px;
  text-align: center;
  line-height: 24px;
  margin: 2px;
  border-radius: 4px;
  cursor: pointer;
  transition: 0.2s;
  margin-bottom: 3px;
}
.PluginManagerView .initial-tag.active-initial {
  background-color: var(--background-modifier-border-hover);
}
.PluginManagerView table {
  table-layout: auto;
  border-collapse: collapse;
  width: 100%;
  min-width: 50em;
}
.PluginManagerView .initial-tag:hover {
  background-color: var(--background-modifier-border-hover);
}
.PluginManagerView .GroupView {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.PluginManagerView .switch {
  position: relative;
  display: inline-block;
  width: 40px;
  height: 20px;
}
.PluginManagerView .switch input {
  opacity: 0;
  width: 0;
  height: 0;
}
.PluginManagerView .slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--background-modifier-border-hover);
  transition: 0.4s;
  border-radius: 20px;
}
.PluginManagerView .slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 2px;
  bottom: 2px;
  background-color: var(--toggle-thumb-color);
  transition: 0.4s;
  border-radius: 50%;
}
.PluginManagerView input:checked + .slider {
  background-color: hsl(var(--accent-h), var(--accent-s), var(--accent-l));
}
.PluginManagerView input:checked + .slider:before {
  transform: translateX(20px);
}
.PluginManagerView .setting-item {
  display: flex;
  align-items: center;
  padding: 0.75em 0;
  flex-direction: column;
  justify-content: center;
}
.PluginManagerView tr {
  border: 1px solid #ddd;
}
.PluginManagerView td {
  padding: 0 5px;
  min-width: 0;
}
.PluginManagerView th {
  background-color: #9e9d9d51;
  height: 3em;
  cursor: pointer;
  border: #333 solid 1px;
  font-size: 0.8em;
}
.PluginManagerView td:nth-child(odd) {
  background-color: #d3d3d346;
}
.PluginManagerView td:nth-child(even) {
  background-color: #e8e8e814;
}
.PluginManagerView .plugin-name {
  display: flex;
  justify-content: space-between;
}
.PluginManagerView .version {
  color: #b6b6b6;
  font-size: 0.7em;
}
.PluginManagerView .plugin-name.isDesktopOnly {
  color: var(--background-modifier-border-hover);
}
.PluginManagerView .enabled {
  background-color: #f9f9f9;
  color: #333;
  cursor: pointer;
}
.PluginManagerView .plugin-setting {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}
.PluginManagerView .enabled:hover {
  background-color: #ffffff;
  color: #333;
}
.PluginManagerView table th:nth-child(1),
.PluginManagerView table td:nth-child(1) {
  width: 9.5em;
  min-width: 9.5em;
}
.PluginManagerView th:nth-child(2),
.PluginManagerView td:nth-child(2) {
  text-align: center;
  vertical-align: middle;
  width: 3em;
  min-width: 3em;
}
.PluginManagerView th:nth-child(3),
.PluginManagerView td:nth-child(3) {
  width: 3em;
  min-width: 3em;
  text-align: center;
  vertical-align: middle;
}
.PluginManagerView td:nth-child(3) input {
  display: inline-block;
  box-sizing: border-box;
  width: 3em;
  min-width: 3em;
  padding: 0;
  border: 0;
}
.PluginManagerView th:nth-child(4),
.PluginManagerView td:nth-child(4) {
  min-width: 0em;
  padding: 0;
}
.PluginManagerView th:nth-child(5),
.PluginManagerView td:nth-child(5) {
  min-width: 5.5em;
  text-align: center;
  vertical-align: middle;
  font-size: 0.8em;
}
.PluginManagerView th:nth-child(6),
.PluginManagerView td:nth-child(6) {
  width: 100%;
}
.PluginManagerView textarea {
  width: 100%;
  box-sizing: border-box;
}
.pluginManager-table-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  min-width: 50em;
  & button {
    cursor: pointer;
  }
}
.pluginManager-table-header div:last-child {
  display: flex;
  justify-content: space-between;
  margin-left: 2em;
}

/* src/pluginManagerPlugin/GroupView.css */
.PluginManagerView .GroupView {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin-bottom: 5px;
}
.GroupView .GroupView-group {
  display: flex;
  padding: 0.5em 0.5em;
  cursor: pointer;
  border-radius: 1em;
  margin-right: 0.5em;
  height: 1.5em;
  align-content: center;
  align-items: center;
}
.GroupView .GroupView-group:hover {
  background-color: var(--background-modifier-hover);
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);
}
.GroupView .GroupView-delete {
  cursor: pointer;
  margin-left: 0.3em;
  position: relative;
  left: 5px;
}
.GroupView .GroupView-delete:hover {
  background-color: var(--titlebar-background-focused);
}
.GroupView .GroupView-active {
  background-color: var(--background-modifier-hover);
}
div.GroupView div.GroupView-container {
  display: flex;
  align-items: center;
  margin-left: 1em;
  width: 8em;
}
.GroupView-container input {
  padding: 5px;
  border: 1px solid #ccc;
  border-radius: 4px;
  width: 5em;
}
.GroupView-setting button {
  color: var(--icon-color);
  border: none;
  border-radius: 30%;
  width: 1.5em;
  height: 1.5em;
  cursor: pointer;
}
.GroupView-setting button:hover {
  background-color: var(--titlebar-background-focused);
}
div.GroupView div.GroupView-setting {
  display: flex;
  width: 5em;
  flex-direction: row;
  justify-content: space-between;
  margin-left: 0;
}
.GroupView-setting button {
  margin-left: 1em;
}

/* src/pluginManagerPlugin/MakeTagsView.css */
.MakeTagsView {
  display: flex;
  flex-wrap: wrap;
  min-width: 11em;
}
.MakeTagsView .dropdown {
  max-width: 8em;
  background-color: var(--titlebar-background-focused);
  padding: 0 0.3em;
  height: 2em;
}
.MakeTagsView select {
  max-width: 8em;
  padding: 0 0.3em;
  height: 2em;
}
.MakeTagsView .MakeTagsView-setting span {
  background-color: transparent;
  cursor: pointer;
  border-radius: 50%;
}
.MakeTagsView .MakeTagsView-setting span:hover {
  background-color: var(--titlebar-background-focused);
}
.MakeTagsView .MakeTagsView-container {
  display: flex;
  align-items: center;
}
.MakeTagsView .MakeTagsView-tag {
  padding: 0 0.5em;
  background-color: transparent;
  cursor: pointer;
  border-radius: 1em;
  margin: 2px 0;
  white-space: nowrap;
}
.MakeTagsView .MakeTagsView-tag:hover {
  background-color: var(--background-modifier-hover);
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);
}
.MakeTagsView .MakeTagsView-delete {
  cursor: pointer;
  position: relative;
  left: 5px;
}
.MakeTagsView .MakeTagsView-delete:hover {
  background-color: var(--titlebar-background-focused);
}
.MakeTagsView .MakeTagsView-enter {
  display: flex;
  flex-direction: column;
}
.MakeTagsView .MakeTagsView-enter span {
  border: 1px solid rgba(103, 108, 108, 0.313);
  background-color: var(--titlebar-background-focused);
  border-radius: 0.5em;
  display: flex;
  flex-direction: row;
  font-size: 0.7em;
  margin: 2px 0 2px 1em;
  cursor: pointer;
  width: 2.5em;
  line-height: 1.5em;
  justify-content: center;
  align-items: center;
}
.MakeTagsView .MakeTagsView-enter span:hover {
  background: var(--background-modifier-hover);
}
.MakeTagsView .MakeTagsView-setting span {
  background-color: transparent;
  border-radius: 50%;
  font-size: unset;
  display: block;
  align-items: center;
  padding-left: 3px;
  padding-right: 3px;
  color: #0000004c;
}
.MakeTagsView .MakeTagsView-setting {
  display: flex;
  justify-content: space-around;
}
.MakeTagsView .GroupView-active {
  background-color: var(--background-modifier-hover);
}
/*# sourceMappingURL=data:application/json;base64, */
