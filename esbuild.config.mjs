import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
    minify: prod,
    plugins: [
        {
            //把css文件打包到styles.css中
            name: 'css-output-plugin',
            setup(build) {
                build.onEnd(() => {
                    esbuild.build({
                        entryPoints: ['main.css'],
                        outfile: 'styles.css',
                        minify: prod,
                        bundle: true,
                    }).catch(() => process.exit(1));
                });
            }
        }
    ]
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
